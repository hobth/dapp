---
title: Collection report
---

<div x-data="list()"> 

    <!--
    This example requires Tailwind CSS v2.0+ 
    
    This example requires some changes to your config:
    
    ```
    // tailwind.config.js
    module.exports = {
        // ...
        plugins: [
        // ...
        require('@tailwindcss/forms'),
        ],
    }
    ```
    -->
    <div>

    <div class="hidden sm:block">
        <div class="border-b border-gray-200">
        <nav class="-mb-px flex" aria-label="Tabs">
            <template x-for="tab in tabs">
            <!-- Current: "border-indigo-500 text-indigo-600", Default: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300" -->
            <a 
            x-text="tab" href="#" 
            @click = "activetab = tab"
            :class="activetab==tab ? 'border-indigo-500 text-indigo-600 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 w-1/4 py-4 px-1 text-center border-b-2 font-medium text-sm' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 w-1/4 py-4 px-1 text-center border-b-2 font-medium text-sm'"> My Account </a>
            </template>
        </nav>
        </div>
    </div>
    </div>


    <canvas x-show="activetab=='Sales'" id="Sales" width="400" height="100"></canvas>
    <canvas x-show="activetab=='Volume'" id="Volume" width="400" height="100"></canvas>
    <canvas x-show="activetab=='Price'" id="Price" width="400" height="100"></canvas>
    <svg x-show="loading" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin: 0 auto 5rem auto; display: block; shape-rendering: auto;" width="50px" height="50px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
    <path fill="none" stroke="#85a2b6" stroke-width="8" stroke-dasharray="42.76482137044271 42.76482137044271" d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z" stroke-linecap="round" style="transform:scale(0.8);transform-origin:50px 50px">
    <animate attributeName="stroke-dashoffset" repeatCount="indefinite" dur="1s" keyTimes="0;1" values="0;256.58892822265625"></animate>
    </path>
    </svg>

    <div class="flex flex-col" >
        <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
            <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
            <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
                <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ERC</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Balance</th>
                    <th scope="col" class="relative px-6 py-3">
                        <span class="sr-only">Edit</span>
                    </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <template x-for="item in arr">
                    <tr>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                        <div class="flex-shrink-0 h-10 w-10">
                            <img class="h-10 w-10 rounded-full" :src="item.external_data.image_256" alt="">
                        </div>
                        <div class="ml-4">
                            <div class="text-sm font-medium text-gray-900" x-text="item.external_data.name">Cooper</div>
                            <div x-text="item.owner" class="text-sm text-gray-500" >jane.cooper@example.com</div>
                        </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span x-text="item.supports_erc[0]" class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800"> Active </span>
                    </td>
                    <td x-text="item.token_balance" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Admin</td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <a href="#" class="text-indigo-600 hover:text-indigo-900">Edit</a>
                    </td>
                    </tr>
                    </template>

                    <!-- More people... -->
                </tbody>
                </table>
            </div>
            </div>
        </div>
    </div>

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js" integrity="sha512-QSkVNOCYLtj73J4hbmVoOV6KVZuMluZlioC+trLpewV8qMjsWqlIQvkn1KGX2StWvPMdWGBqim1xlC8krl1EKQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="/assets/js/covalent.js"></script>
<link rel="stylesheet" href="https://unpkg.com/charts.css/dist/charts.min.css">





<script>
    var hash = window.location.hash.substr(1);
    var covalentapi = localStorage.getItem('covalentapi');
    console.log('hash',hash)
function list() {

    
    return {
        stats:[],
        loading:true,
        tabs: ['Sales', 'Volume', 'Price'],
        activetab: 'Sales',
        collmenu: false,
        collections: supported_collection,
        collection: null,
        arr:{},
        update:Date.now(),
        async load(collection) {
            console.log('loading', collection)
            this.collection = collection;
            
            tokens = await getNFTCollection(this.collection);
            tokens.slice(0,10).forEach(async token => {
                obj = await getNFTToken(this.collection, token.token_id)
                console.log('obj', obj)
                this.arr[token.token_id] = obj.nft_data[0];
                this.update = Date.now()
            })
            await showCharts(res=>{
                this.loading = false;
            })
        },
        async getStats(){
            fetch('https://api.covalenthq.com/v1/1/nft_market/collection/'+this.collection+'/?key='+covalentapi)
            .then(res => res.json())
            .then(res => {
                this.stats = res.data.items;
                console.log('stats', this.stats)  
            })
        }, 
        async init() {
            this.load(hash);   
        }
    }
}




</script> 


<script>

function showCharts(callback) {

    const sctx = document.getElementById('Sales').getContext('2d');
    const vctx = document.getElementById('Volume').getContext('2d');
    const pctx = document.getElementById('Price').getContext('2d');

    fetch('https://api.covalenthq.com/v1/1/nft_market/collection/'+hash+'/?from=2022-01-20&to=2022-02-20&key='+covalentapi)
    .then(res => res.json())
    .then(res => {
        console.log(res.data.items)
        res.data.items = res.data.items.reverse()
        console.log(res.data.items.map(item => item.unique_token_ids_sold_count_day))
        
        labels = res.data.items.map(item => item.opening_date.replace('2022-',''))
        sales = res.data.items.map(item => item.unique_token_ids_sold_count_day)
        volume = res.data.items.map(item => item.volume_quote_day)
        price = res.data.items.map(item => item.average_volume_quote_day)
        console.log(price)
        
        const salesChart = new Chart(sctx, {
            type: 'bar',
            ticks: {
            reverse: true
        },
            data: {
                labels: labels,
                datasets: [{
                    label: '# of Sales',
                    data: sales,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        const volumeChart = new Chart(vctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Daily Volume',
                    data: volume,
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });


        const priceChart = new Chart(pctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Price per Token',
                    data: price,
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        callback()
    })
   
}

</script>
